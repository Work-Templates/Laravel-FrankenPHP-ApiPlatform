services:
    db:
        container_name: db.${APP_NAMESPACE}
        image: postgres:17
        environment:
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_DATABASE}'
            PGDATA: '/var/lib/postgresql/data/pgdata'
        volumes:
            - pg_data:/var/lib/postgresql/data
        ports:
            - '${DB_PORT}:5432'
        networks:
            - app
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}" ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '1'
                    memory: 4G
    php:
        build:
            context: .
            dockerfile: .docker/php/Dockerfile
        container_name: php.${APP_NAMESPACE}
        ports:
            - "80:8000"
            - "443:443"
            - "443:443/udp"
        volumes:
            - .:/app
        depends_on:
            redis:
                condition: service_healthy
            db:
                condition: service_healthy
        networks:
            - app
    redis:
        restart: unless-stopped
        container_name: redis.${APP_NAMESPACE}
        image: redis:7.4.0
        volumes:
            - redis_data:/data
        ports:
            - '${REDIS_PORT:-}:6379'
        networks:
            - app
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 1s
            timeout: 3s
            retries: 30
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"
    minio:
      image: minio/minio:latest
      command: server --console-address ":9001" /data/
      container_name: minio.${APP_NAMESPACE}
      ports:
        - "9000:9000"
        - "9001:9001"
      environment:
        MINIO_ROOT_USER: '${MINIO_ROOT_USER}'
        MINIO_ROOT_PASSWORD: '${MINIO_ROOT_PASSWORD}'
      volumes:
        - minio_data:/data
      healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
        interval: 30s
        timeout: 20s
        retries: 3
      networks:
        - app
    mailhog:
      image: mailhog/mailhog:latest
      container_name: mailhog.${APP_NAMESPACE}
      ports:
        - "8003:1025"
        - "8100:8025"
      networks:
        - app
volumes:
    caddy_data:
    caddy_config:
    pg_data:
    redis_data:
    minio_data:

networks:
    app:
        driver: bridge
